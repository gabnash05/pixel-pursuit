// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider    = "prisma-client-js"
}

datasource db {
    provider    = "postgresql"
    url         = env("DATABASE_URL")
}
 
model User {
    id              String      @id @default(uuid())
    email           String      @unique
    password        String
    username        String      @unique
    isAdmin         Boolean     @default(false)
    totalPoints     Int         @default(0)
    scans           Scan[]
    createdAt       DateTime    @default(now())
    updatedAt       DateTime    @updatedAt
    @@map("users")
}

model Scan {
    id              String      @id @default(uuid())
    qrCodeString    String
    qrCodeId        String
    pointsEarned    Int         // Points actually earned in this scan
    timestamp       DateTime    @default(now())
    userId          String
    user            User        @relation(fields: [userId], references: [id])
    qrCode          QRCodes     @relation(fields: [qrCodeId], references: [id])
    
    @@unique([userId, qrCodeId]) // Prevent duplicate scans
    @@map("scans")
}

model QRCodes {
    id              String      @id @default(uuid())
    code            String      @unique
    initialPoints   Int         // Starting points
    currPoints      Int         // Current points available
    scans           Scan[]
    createdAt       DateTime    @default(now())
    updatedAt       DateTime    @updatedAt
    @@map("qr_codes")
}
